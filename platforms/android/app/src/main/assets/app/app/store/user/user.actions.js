"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.READ_USER = 'READ_USER';
exports.READ_USER_SUCCESS = 'READ_USER_SUCCESS';
exports.READ_USER_FAILED = 'READ_USER_FAILED';
exports.UPDATE_USER = 'UPDATE_USER';
exports.UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';
exports.UPDATE_USER_FAILED = 'UPDATE_USER_FAILED';
exports.WRITE_USER = 'WRITE_USER_STATE';
exports.WRITE_USER_SUCCESS = 'WRITE_USER_STATE_SUCCESS';
exports.WRITE_USER_FAILED = 'WRITE_USER_STATE_FAILED';
exports.UPDATE_USER_STATE = 'UPDATE_USER_STATE';
var UpdateUserAction = /** @class */ (function () {
    function UpdateUserAction(user) {
        this.user = user;
        this.type = exports.UPDATE_USER;
    }
    return UpdateUserAction;
}());
exports.UpdateUserAction = UpdateUserAction;
var UpdateUserActionSuccess = /** @class */ (function () {
    function UpdateUserActionSuccess(user) {
        this.user = user;
        this.type = exports.UPDATE_USER_SUCCESS;
    }
    return UpdateUserActionSuccess;
}());
exports.UpdateUserActionSuccess = UpdateUserActionSuccess;
var UpdateUserActionFailed = /** @class */ (function () {
    function UpdateUserActionFailed() {
        this.type = exports.UPDATE_USER_FAILED;
    }
    return UpdateUserActionFailed;
}());
exports.UpdateUserActionFailed = UpdateUserActionFailed;
var ReadUserAction = /** @class */ (function () {
    function ReadUserAction(uuid) {
        this.uuid = uuid;
        this.type = exports.READ_USER;
    }
    return ReadUserAction;
}());
exports.ReadUserAction = ReadUserAction;
var ReadUserSuccessAction = /** @class */ (function () {
    function ReadUserSuccessAction(user) {
        this.user = user;
        this.type = exports.READ_USER_SUCCESS;
    }
    return ReadUserSuccessAction;
}());
exports.ReadUserSuccessAction = ReadUserSuccessAction;
var ReadUserFailAction = /** @class */ (function () {
    function ReadUserFailAction(error) {
        this.error = error;
        this.type = exports.READ_USER_FAILED;
    }
    return ReadUserFailAction;
}());
exports.ReadUserFailAction = ReadUserFailAction;
var WriteUserAction = /** @class */ (function () {
    function WriteUserAction(uuid, user) {
        this.uuid = uuid;
        this.user = user;
        this.type = exports.WRITE_USER;
    }
    return WriteUserAction;
}());
exports.WriteUserAction = WriteUserAction;
var WriteUserSuccessAction = /** @class */ (function () {
    function WriteUserSuccessAction() {
        this.type = exports.WRITE_USER_SUCCESS;
    }
    return WriteUserSuccessAction;
}());
exports.WriteUserSuccessAction = WriteUserSuccessAction;
var WriteUserFailedAction = /** @class */ (function () {
    function WriteUserFailedAction(error) {
        this.error = error;
        this.type = exports.WRITE_USER_FAILED;
    }
    return WriteUserFailedAction;
}());
exports.WriteUserFailedAction = WriteUserFailedAction;
var UpdateUserStateAction = /** @class */ (function () {
    function UpdateUserStateAction(user) {
        this.user = user;
        this.type = exports.UPDATE_USER_STATE;
    }
    return UpdateUserStateAction;
}());
exports.UpdateUserStateAction = UpdateUserStateAction;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5hY3Rpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidXNlci5hY3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR2EsUUFBQSxTQUFTLEdBQUcsV0FBVyxDQUFDO0FBQ3hCLFFBQUEsaUJBQWlCLEdBQUcsbUJBQW1CLENBQUM7QUFDeEMsUUFBQSxnQkFBZ0IsR0FBRyxrQkFBa0IsQ0FBQztBQUV0QyxRQUFBLFdBQVcsR0FBRyxhQUFhLENBQUM7QUFDNUIsUUFBQSxtQkFBbUIsR0FBRyxxQkFBcUIsQ0FBQztBQUM1QyxRQUFBLGtCQUFrQixHQUFHLG9CQUFvQixDQUFDO0FBRTFDLFFBQUEsVUFBVSxHQUFHLGtCQUFrQixDQUFDO0FBQ2hDLFFBQUEsa0JBQWtCLEdBQUcsMEJBQTBCLENBQUM7QUFDaEQsUUFBQSxpQkFBaUIsR0FBRyx5QkFBeUIsQ0FBQztBQUU5QyxRQUFBLGlCQUFpQixHQUFHLG1CQUFtQixDQUFDO0FBRXJEO0lBRUksMEJBQW1CLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBRHBCLFNBQUksR0FBRyxtQkFBVyxDQUFDO0lBQ0ksQ0FBQztJQUNyQyx1QkFBQztBQUFELENBQUMsQUFIRCxJQUdDO0FBSFksNENBQWdCO0FBSzdCO0lBRUksaUNBQW1CLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBRHBCLFNBQUksR0FBRywyQkFBbUIsQ0FBQztJQUNILENBQUM7SUFDdEMsOEJBQUM7QUFBRCxDQUFDLEFBSEQsSUFHQztBQUhZLDBEQUF1QjtBQUtwQztJQUVJO1FBRFMsU0FBSSxHQUFHLDBCQUFrQixDQUFDO0lBQ25CLENBQUM7SUFDckIsNkJBQUM7QUFBRCxDQUFDLEFBSEQsSUFHQztBQUhZLHdEQUFzQjtBQUtuQztJQUVJLHdCQUFtQixJQUFZO1FBQVosU0FBSSxHQUFKLElBQUksQ0FBUTtRQUR0QixTQUFJLEdBQUcsaUJBQVMsQ0FBQztJQUNTLENBQUM7SUFDeEMscUJBQUM7QUFBRCxDQUFDLEFBSEQsSUFHQztBQUhZLHdDQUFjO0FBSzNCO0lBRUksK0JBQW1CLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBRHBCLFNBQUksR0FBRyx5QkFBaUIsQ0FBQztJQUNELENBQUM7SUFDdEMsNEJBQUM7QUFBRCxDQUFDLEFBSEQsSUFHQztBQUhZLHNEQUFxQjtBQUtsQztJQUVJLDRCQUFtQixLQUFhO1FBQWIsVUFBSyxHQUFMLEtBQUssQ0FBUTtRQUR2QixTQUFJLEdBQUcsd0JBQWdCLENBQUM7SUFDRSxDQUFDO0lBQ3hDLHlCQUFDO0FBQUQsQ0FBQyxBQUhELElBR0M7QUFIWSxnREFBa0I7QUFLL0I7SUFFSSx5QkFBbUIsSUFBWSxFQUFTLElBQVU7UUFBL0IsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUFTLFNBQUksR0FBSixJQUFJLENBQU07UUFEekMsU0FBSSxHQUFHLGtCQUFVLENBQUM7SUFDMkIsQ0FBQztJQUMzRCxzQkFBQztBQUFELENBQUMsQUFIRCxJQUdDO0FBSFksMENBQWU7QUFLNUI7SUFFSTtRQURTLFNBQUksR0FBRywwQkFBa0IsQ0FBQztJQUNuQixDQUFDO0lBQ3JCLDZCQUFDO0FBQUQsQ0FBQyxBQUhELElBR0M7QUFIWSx3REFBc0I7QUFLbkM7SUFFSSwrQkFBbUIsS0FBYTtRQUFiLFVBQUssR0FBTCxLQUFLLENBQVE7UUFEdkIsU0FBSSxHQUFHLHlCQUFpQixDQUFDO0lBQ0UsQ0FBQztJQUN6Qyw0QkFBQztBQUFELENBQUMsQUFIRCxJQUdDO0FBSFksc0RBQXFCO0FBS2xDO0lBRUksK0JBQTRCLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBRDdCLFNBQUksR0FBRyx5QkFBaUIsQ0FBQztJQUNRLENBQUM7SUFDL0MsNEJBQUM7QUFBRCxDQUFDLEFBSEQsSUFHQztBQUhZLHNEQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGlvbiB9IGZyb20gXCJAbmdyeC9zdG9yZVwiO1xyXG5pbXBvcnQgeyBVc2VyIH0gZnJvbSBcIi4uLy4uL21vZGVscy91c2VyLm1vZGVsXCI7XHJcblxyXG5leHBvcnQgY29uc3QgUkVBRF9VU0VSID0gJ1JFQURfVVNFUic7XHJcbmV4cG9ydCBjb25zdCBSRUFEX1VTRVJfU1VDQ0VTUyA9ICdSRUFEX1VTRVJfU1VDQ0VTUyc7XHJcbmV4cG9ydCBjb25zdCBSRUFEX1VTRVJfRkFJTEVEID0gJ1JFQURfVVNFUl9GQUlMRUQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IFVQREFURV9VU0VSID0gJ1VQREFURV9VU0VSJztcclxuZXhwb3J0IGNvbnN0IFVQREFURV9VU0VSX1NVQ0NFU1MgPSAnVVBEQVRFX1VTRVJfU1VDQ0VTUyc7XHJcbmV4cG9ydCBjb25zdCBVUERBVEVfVVNFUl9GQUlMRUQgPSAnVVBEQVRFX1VTRVJfRkFJTEVEJztcclxuXHJcbmV4cG9ydCBjb25zdCBXUklURV9VU0VSID0gJ1dSSVRFX1VTRVJfU1RBVEUnO1xyXG5leHBvcnQgY29uc3QgV1JJVEVfVVNFUl9TVUNDRVNTID0gJ1dSSVRFX1VTRVJfU1RBVEVfU1VDQ0VTUyc7XHJcbmV4cG9ydCBjb25zdCBXUklURV9VU0VSX0ZBSUxFRCA9ICdXUklURV9VU0VSX1NUQVRFX0ZBSUxFRCc7XHJcblxyXG5leHBvcnQgY29uc3QgVVBEQVRFX1VTRVJfU1RBVEUgPSAnVVBEQVRFX1VTRVJfU1RBVEUnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFVwZGF0ZVVzZXJBY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xyXG4gICAgcmVhZG9ubHkgdHlwZSA9IFVQREFURV9VU0VSO1xyXG4gICAgY29uc3RydWN0b3IocHVibGljIHVzZXI6IFVzZXIpIHt9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBVcGRhdGVVc2VyQWN0aW9uU3VjY2VzcyBpbXBsZW1lbnRzIEFjdGlvbiB7XHJcbiAgICByZWFkb25seSB0eXBlID0gVVBEQVRFX1VTRVJfU1VDQ0VTUztcclxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB1c2VyOiBVc2VyKSB7IH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFVwZGF0ZVVzZXJBY3Rpb25GYWlsZWQgaW1wbGVtZW50cyBBY3Rpb24ge1xyXG4gICAgcmVhZG9ubHkgdHlwZSA9IFVQREFURV9VU0VSX0ZBSUxFRDtcclxuICAgIGNvbnN0cnVjdG9yKCkgeyB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBSZWFkVXNlckFjdGlvbiBpbXBsZW1lbnRzIEFjdGlvbiB7XHJcbiAgICByZWFkb25seSB0eXBlID0gUkVBRF9VU0VSO1xyXG4gICAgY29uc3RydWN0b3IocHVibGljIHV1aWQ6IHN0cmluZykgeyB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBSZWFkVXNlclN1Y2Nlc3NBY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xyXG4gICAgcmVhZG9ubHkgdHlwZSA9IFJFQURfVVNFUl9TVUNDRVNTO1xyXG4gICAgY29uc3RydWN0b3IocHVibGljIHVzZXI6IFVzZXIpIHsgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgUmVhZFVzZXJGYWlsQWN0aW9uIGltcGxlbWVudHMgQWN0aW9uIHtcclxuICAgIHJlYWRvbmx5IHR5cGUgPSBSRUFEX1VTRVJfRkFJTEVEO1xyXG4gICAgY29uc3RydWN0b3IocHVibGljIGVycm9yOiBTdHJpbmcpIHt9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBXcml0ZVVzZXJBY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xyXG4gICAgcmVhZG9ubHkgdHlwZSA9IFdSSVRFX1VTRVI7XHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdXVpZDogc3RyaW5nLCBwdWJsaWMgdXNlcjogVXNlcikgeyB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBXcml0ZVVzZXJTdWNjZXNzQWN0aW9uIGltcGxlbWVudHMgQWN0aW9uIHtcclxuICAgIHJlYWRvbmx5IHR5cGUgPSBXUklURV9VU0VSX1NVQ0NFU1M7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgV3JpdGVVc2VyRmFpbGVkQWN0aW9uIGltcGxlbWVudHMgQWN0aW9uIHtcclxuICAgIHJlYWRvbmx5IHR5cGUgPSBXUklURV9VU0VSX0ZBSUxFRDtcclxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBlcnJvcjogU3RyaW5nKSB7IH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFVwZGF0ZVVzZXJTdGF0ZUFjdGlvbiBpbXBsZW1lbnRzIEFjdGlvbiB7XHJcbiAgICByZWFkb25seSB0eXBlID0gVVBEQVRFX1VTRVJfU1RBVEU7XHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgdXNlcjogVXNlcikgeyB9XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIFVzZXJBY3Rpb25zID0gUmVhZFVzZXJBY3Rpb24gfCBSZWFkVXNlclN1Y2Nlc3NBY3Rpb24gfCBSZWFkVXNlckZhaWxBY3Rpb24gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHwgV3JpdGVVc2VyQWN0aW9uIHwgV3JpdGVVc2VyU3VjY2Vzc0FjdGlvbiB8IFdyaXRlVXNlckZhaWxlZEFjdGlvbiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgfFVwZGF0ZVVzZXJBY3Rpb24gfCBVcGRhdGVVc2VyQWN0aW9uU3VjY2VzcyB8IFVwZGF0ZVVzZXJBY3Rpb25GYWlsZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfCBVcGRhdGVVc2VyU3RhdGVBY3Rpb247Il19