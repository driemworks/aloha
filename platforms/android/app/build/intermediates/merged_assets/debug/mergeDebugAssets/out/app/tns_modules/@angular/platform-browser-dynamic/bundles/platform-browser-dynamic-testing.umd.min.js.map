{"version":3,"sources":["packages/platform-browser-dynamic/platform-browser-dynamic-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","platformBrowserDynamic","testing","core","platformBrowser","compiler","this","testing$1","testing$2","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DOMTestComponentRenderer","_super","_doc","_this","call","__extends","__","constructor","prototype","create","insertRootElement","rootElId","rootEl","ɵgetDOM","firstChild","content","createTemplate","oldRoots","querySelectorAll","remove","appendChild","body","Injectable","__param","paramIndex","decorator","Inject","DOCUMENT","__metadata","metadataKey","metadataValue","metadata","TestComponentRenderer","COMPILER_PROVIDERS","provide","MockPipeResolver","deps","CompileReflector","PipeResolver","useExisting","MockDirectiveResolver","DirectiveResolver","MockNgModuleResolver","NgModuleResolver","TestingCompilerFactoryImpl","_injector","_compilerFactory","createTestingCompiler","options","compiler$$1","createCompiler","TestingCompilerImpl","injector","get","_compiler","_directiveResolver","_pipeResolver","_moduleResolver","_overrider","ɵMetadataOverrider","enumerable","configurable","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getComponentFactory","component","checkOverrideAllowed","type","hasAotSummary","Error","ɵstringify","overrideModule","ngModule","override","oldMetadata","resolve","setNgModule","overrideMetadata","NgModule","clearCacheFor","overrideDirective","directive","setDirective","Directive","overrideComponent","Component","overridePipe","pipe","setPipe","Pipe","loadAotSummaries","summaries","clearCache","getComponentFromError","error","ERROR_COMPONENT_TYPE","getModuleId","id","platformCoreDynamicTesting","createPlatformFactory","ɵplatformCoreDynamic","COMPILER_OPTIONS","useValue","providers","multi","ɵTestingCompilerFactory","useClass","Injector","CompilerFactory","platformBrowserDynamicTesting","ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","BrowserDynamicTestingModule","BrowserTestingModule","ɵangular_packages_platform_browser_dynamic_testing_testing_a","ɵangular_packages_platform_browser_dynamic_testing_testing_b","ɵDOMTestComponentRenderer","ɵplatformCoreDynamicTesting","value"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.4\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/core/testing'), require('@angular/platform-browser'), require('@angular/compiler'), require('@angular/compiler/testing'), require('@angular/platform-browser-dynamic'), require('@angular/platform-browser/testing')) :\n    typeof define === 'function' && define.amd ? define('@angular/platform-browser-dynamic/testing', ['exports', '@angular/core', '@angular/core/testing', '@angular/platform-browser', '@angular/compiler', '@angular/compiler/testing', '@angular/platform-browser-dynamic', '@angular/platform-browser/testing'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.platformBrowserDynamic = global.ng.platformBrowserDynamic || {}, global.ng.platformBrowserDynamic.testing = {}),global.ng.core,global.ng.core.testing,global.ng.platformBrowser,global.ng.compiler,global.ng.compiler.testing,global.ng.platformBrowserDynamic,global.ng.platformBrowser.testing));\n}(this, (function (exports,core,testing,platformBrowser,compiler,testing$1,platformBrowserDynamic,testing$2) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DOM based implementation of the TestComponentRenderer.\n     */\n    var DOMTestComponentRenderer = /** @class */ (function (_super) {\n        __extends(DOMTestComponentRenderer, _super);\n        function DOMTestComponentRenderer(_doc) {\n            var _this = _super.call(this) || this;\n            _this._doc = _doc;\n            return _this;\n        }\n        DOMTestComponentRenderer.prototype.insertRootElement = function (rootElId) {\n            var rootEl = platformBrowser.ɵgetDOM().firstChild(platformBrowser.ɵgetDOM().content(platformBrowser.ɵgetDOM().createTemplate(\"<div id=\\\"\" + rootElId + \"\\\"></div>\")));\n            // TODO(juliemr): can/should this be optional?\n            var oldRoots = platformBrowser.ɵgetDOM().querySelectorAll(this._doc, '[id^=root]');\n            for (var i = 0; i < oldRoots.length; i++) {\n                platformBrowser.ɵgetDOM().remove(oldRoots[i]);\n            }\n            platformBrowser.ɵgetDOM().appendChild(this._doc.body, rootEl);\n        };\n        DOMTestComponentRenderer = __decorate([\n            core.Injectable(),\n            __param(0, core.Inject(platformBrowser.DOCUMENT)),\n            __metadata(\"design:paramtypes\", [Object])\n        ], DOMTestComponentRenderer);\n        return DOMTestComponentRenderer;\n    }(testing.TestComponentRenderer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPILER_PROVIDERS = [\n        { provide: testing$1.MockPipeResolver, deps: [compiler.CompileReflector] },\n        { provide: compiler.PipeResolver, useExisting: testing$1.MockPipeResolver },\n        { provide: testing$1.MockDirectiveResolver, deps: [compiler.CompileReflector] },\n        { provide: compiler.DirectiveResolver, useExisting: testing$1.MockDirectiveResolver },\n        { provide: testing$1.MockNgModuleResolver, deps: [compiler.CompileReflector] },\n        { provide: compiler.NgModuleResolver, useExisting: testing$1.MockNgModuleResolver },\n    ];\n    var TestingCompilerFactoryImpl = /** @class */ (function () {\n        function TestingCompilerFactoryImpl(_injector, _compilerFactory) {\n            this._injector = _injector;\n            this._compilerFactory = _compilerFactory;\n        }\n        TestingCompilerFactoryImpl.prototype.createTestingCompiler = function (options) {\n            var compiler$$1 = this._compilerFactory.createCompiler(options);\n            return new TestingCompilerImpl(compiler$$1, compiler$$1.injector.get(testing$1.MockDirectiveResolver), compiler$$1.injector.get(testing$1.MockPipeResolver), compiler$$1.injector.get(testing$1.MockNgModuleResolver));\n        };\n        return TestingCompilerFactoryImpl;\n    }());\n    var TestingCompilerImpl = /** @class */ (function () {\n        function TestingCompilerImpl(_compiler, _directiveResolver, _pipeResolver, _moduleResolver) {\n            this._compiler = _compiler;\n            this._directiveResolver = _directiveResolver;\n            this._pipeResolver = _pipeResolver;\n            this._moduleResolver = _moduleResolver;\n            this._overrider = new testing.ɵMetadataOverrider();\n        }\n        Object.defineProperty(TestingCompilerImpl.prototype, \"injector\", {\n            get: function () { return this._compiler.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        TestingCompilerImpl.prototype.compileModuleSync = function (moduleType) {\n            return this._compiler.compileModuleSync(moduleType);\n        };\n        TestingCompilerImpl.prototype.compileModuleAsync = function (moduleType) {\n            return this._compiler.compileModuleAsync(moduleType);\n        };\n        TestingCompilerImpl.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            return this._compiler.compileModuleAndAllComponentsSync(moduleType);\n        };\n        TestingCompilerImpl.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            return this._compiler.compileModuleAndAllComponentsAsync(moduleType);\n        };\n        TestingCompilerImpl.prototype.getComponentFactory = function (component) {\n            return this._compiler.getComponentFactory(component);\n        };\n        TestingCompilerImpl.prototype.checkOverrideAllowed = function (type) {\n            if (this._compiler.hasAotSummary(type)) {\n                throw new Error(core.ɵstringify(type) + \" was AOT compiled, so its metadata cannot be changed.\");\n            }\n        };\n        TestingCompilerImpl.prototype.overrideModule = function (ngModule, override) {\n            this.checkOverrideAllowed(ngModule);\n            var oldMetadata = this._moduleResolver.resolve(ngModule, false);\n            this._moduleResolver.setNgModule(ngModule, this._overrider.overrideMetadata(core.NgModule, oldMetadata, override));\n            this.clearCacheFor(ngModule);\n        };\n        TestingCompilerImpl.prototype.overrideDirective = function (directive, override) {\n            this.checkOverrideAllowed(directive);\n            var oldMetadata = this._directiveResolver.resolve(directive, false);\n            this._directiveResolver.setDirective(directive, this._overrider.overrideMetadata(core.Directive, oldMetadata, override));\n            this.clearCacheFor(directive);\n        };\n        TestingCompilerImpl.prototype.overrideComponent = function (component, override) {\n            this.checkOverrideAllowed(component);\n            var oldMetadata = this._directiveResolver.resolve(component, false);\n            this._directiveResolver.setDirective(component, this._overrider.overrideMetadata(core.Component, oldMetadata, override));\n            this.clearCacheFor(component);\n        };\n        TestingCompilerImpl.prototype.overridePipe = function (pipe, override) {\n            this.checkOverrideAllowed(pipe);\n            var oldMetadata = this._pipeResolver.resolve(pipe, false);\n            this._pipeResolver.setPipe(pipe, this._overrider.overrideMetadata(core.Pipe, oldMetadata, override));\n            this.clearCacheFor(pipe);\n        };\n        TestingCompilerImpl.prototype.loadAotSummaries = function (summaries) { this._compiler.loadAotSummaries(summaries); };\n        TestingCompilerImpl.prototype.clearCache = function () { this._compiler.clearCache(); };\n        TestingCompilerImpl.prototype.clearCacheFor = function (type) { this._compiler.clearCacheFor(type); };\n        TestingCompilerImpl.prototype.getComponentFromError = function (error) { return error[compiler.ERROR_COMPONENT_TYPE] || null; };\n        TestingCompilerImpl.prototype.getModuleId = function (moduleType) {\n            return this._moduleResolver.resolve(moduleType, true).id;\n        };\n        return TestingCompilerImpl;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Platform for dynamic tests\n     *\n     * @publicApi\n     */\n    var platformCoreDynamicTesting = core.createPlatformFactory(platformBrowserDynamic.ɵplatformCoreDynamic, 'coreDynamicTesting', [\n        { provide: core.COMPILER_OPTIONS, useValue: { providers: COMPILER_PROVIDERS }, multi: true }, {\n            provide: testing.ɵTestingCompilerFactory,\n            useClass: TestingCompilerFactoryImpl,\n            deps: [core.Injector, core.CompilerFactory]\n        }\n    ]);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var platformBrowserDynamicTesting = core.createPlatformFactory(platformCoreDynamicTesting, 'browserDynamicTesting', platformBrowserDynamic.ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n    /**\n     * NgModule for testing.\n     *\n     * @publicApi\n     */\n    var BrowserDynamicTestingModule = /** @class */ (function () {\n        function BrowserDynamicTestingModule() {\n        }\n        BrowserDynamicTestingModule = __decorate([\n            core.NgModule({\n                exports: [testing$2.BrowserTestingModule],\n                providers: [\n                    { provide: testing.TestComponentRenderer, useClass: DOMTestComponentRenderer },\n                ]\n            })\n        ], BrowserDynamicTestingModule);\n        return BrowserDynamicTestingModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_platform_browser_dynamic_testing_testing_a = COMPILER_PROVIDERS;\n    exports.ɵangular_packages_platform_browser_dynamic_testing_testing_b = TestingCompilerFactoryImpl;\n    exports.platformBrowserDynamicTesting = platformBrowserDynamicTesting;\n    exports.BrowserDynamicTestingModule = BrowserDynamicTestingModule;\n    exports.ɵDOMTestComponentRenderer = DOMTestComponentRenderer;\n    exports.ɵplatformCoreDynamicTesting = platformCoreDynamicTesting;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=platform-browser-dynamic-testing.umd.js.map\n"]}