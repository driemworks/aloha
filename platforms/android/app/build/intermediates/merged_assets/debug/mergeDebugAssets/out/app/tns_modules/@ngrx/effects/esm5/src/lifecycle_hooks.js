export var onIdentifyEffectsKey = 'ngrxOnIdentifyEffects';
export var onRunEffectsKey = 'ngrxOnRunEffects';
export var onInitEffects = 'ngrxOnInitEffects';

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlmZWN5Y2xlX2hvb2tzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9lZmZlY3RzL3NyYy9saWZlY3ljbGVfaG9va3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUNBLE1BQU0sQ0FBQyxJQUFNLG9CQUFvQixHQUMvQix1QkFBdUIsQ0FBQztBQXlDMUIsTUFBTSxDQUFDLElBQU0sZUFBZSxHQUF1QixrQkFBa0IsQ0FBQztBQStCdEUsTUFBTSxDQUFDLElBQU0sYUFBYSxHQUF3QixtQkFBbUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEVmZmVjdE5vdGlmaWNhdGlvbiB9IGZyb20gJy4nO1xuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICogSW50ZXJmYWNlIHRvIHNldCBhbiBpZGVudGlmaWVyIGZvciBlZmZlY3QgaW5zdGFuY2VzLlxuICpcbiAqIEJ5IGRlZmF1bHQsIGVhY2ggRWZmZWN0cyBjbGFzcyBpcyByZWdpc3RlcmVkXG4gKiBvbmNlIHJlZ2FyZGxlc3Mgb2YgaG93IG1hbnkgdGltZXMgdGhlIEVmZmVjdCBjbGFzc1xuICogaXMgbG9hZGVkLiBCeSBpbXBsZW1lbnRpbmcgdGhpcyBpbnRlcmZhY2UsIHlvdSBkZWZpbmVcbiAqIGEgdW5pcXVlIGlkZW50aWZpZXIgdG8gcmVnaXN0ZXIgYW4gRWZmZWN0cyBjbGFzcyBpbnN0YW5jZVxuICogbXVsdGlwbGUgdGltZXMuXG4gKlxuICogQHVzYWdlTm90ZXNcbiAqXG4gKiAjIyMgU2V0IGFuIGlkZW50aWZpZXIgZm9yIGFuIEVmZmVjdHMgY2xhc3NcbiAqXG4gKiBgYGB0c1xuICogY2xhc3MgRWZmZWN0V2l0aElkZW50aWZpZXIgaW1wbGVtZW50cyBPbklkZW50aWZ5RWZmZWN0cyB7XG4gKiBwcml2YXRlIGVmZmVjdElkZW50aWZpZXI6IHN0cmluZztcbiAqXG4gKiBuZ3J4T25JZGVudGlmeUVmZmVjdHMoKSB7XG4gKiAgIHJldHVybiB0aGlzLmVmZmVjdElkZW50aWZpZXI7XG4gKiB9XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBlZmZlY3RJZGVudGlmaWVyOiBzdHJpbmcpIHt9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBPbklkZW50aWZ5RWZmZWN0cyB7XG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogU3RyaW5nIGlkZW50aWZpZXIgdG8gZGlmZmVyZW50aWF0ZSBlZmZlY3QgaW5zdGFuY2VzLlxuICAgKi9cbiAgbmdyeE9uSWRlbnRpZnlFZmZlY3RzKCk6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IG9uSWRlbnRpZnlFZmZlY3RzS2V5OiBrZXlvZiBPbklkZW50aWZ5RWZmZWN0cyA9XG4gICduZ3J4T25JZGVudGlmeUVmZmVjdHMnO1xuXG5leHBvcnQgdHlwZSBvblJ1bkVmZmVjdHNGbiA9IChcbiAgcmVzb2x2ZWRFZmZlY3RzJDogT2JzZXJ2YWJsZTxFZmZlY3ROb3RpZmljYXRpb24+XG4pID0+IE9ic2VydmFibGU8RWZmZWN0Tm90aWZpY2F0aW9uPjtcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqIEludGVyZmFjZSB0byBjb250cm9sIHRoZSBsaWZlY3ljbGUgb2YgZWZmZWN0cy5cbiAqXG4gKiBCeSBkZWZhdWx0LCBlZmZlY3RzIGFyZSBtZXJnZWQgYW5kIHN1YnNjcmliZWQgdG8gdGhlIHN0b3JlLiBJbXBsZW1lbnQgdGhlIE9uUnVuRWZmZWN0cyBpbnRlcmZhY2UgdG8gY29udHJvbCB0aGUgbGlmZWN5Y2xlIG9mIHRoZSByZXNvbHZlZCBlZmZlY3RzLlxuICpcbiAqIEB1c2FnZU5vdGVzXG4gKlxuICogIyMjIEltcGxlbWVudCB0aGUgT25SdW5FZmZlY3RzIGludGVyZmFjZSBvbiBhbiBFZmZlY3RzIGNsYXNzXG4gKlxuICogYGBgdHNcbiAqIGV4cG9ydCBjbGFzcyBVc2VyRWZmZWN0cyBpbXBsZW1lbnRzIE9uUnVuRWZmZWN0cyB7XG4gKiAgIGNvbnN0cnVjdG9yKHByaXZhdGUgYWN0aW9ucyQ6IEFjdGlvbnMpIHt9XG4gKlxuICogICBuZ3J4T25SdW5FZmZlY3RzKHJlc29sdmVkRWZmZWN0cyQ6IE9ic2VydmFibGU8RWZmZWN0Tm90aWZpY2F0aW9uPikge1xuICogICAgIHJldHVybiB0aGlzLmFjdGlvbnMkLnBpcGUoXG4gKiAgICAgICBvZlR5cGUoJ0xPR0dFRF9JTicpLFxuICogICAgICAgZXhoYXVzdE1hcCgoKSA9PlxuICogICAgICAgICByZXNvbHZlZEVmZmVjdHMkLnBpcGUoXG4gKiAgICAgICAgICAgdGFrZVVudGlsKHRoaXMuYWN0aW9ucyQucGlwZShvZlR5cGUoJ0xPR0dFRF9PVVQnKSkpXG4gKiAgICAgICAgIClcbiAqICAgICAgIClcbiAqICAgICApO1xuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBPblJ1bkVmZmVjdHMge1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIE1ldGhvZCB0byBjb250cm9sIHRoZSBsaWZlY3ljbGUgb2YgZWZmZWN0cy5cbiAgICovXG4gIG5ncnhPblJ1bkVmZmVjdHM6IG9uUnVuRWZmZWN0c0ZuO1xufVxuXG5leHBvcnQgY29uc3Qgb25SdW5FZmZlY3RzS2V5OiBrZXlvZiBPblJ1bkVmZmVjdHMgPSAnbmdyeE9uUnVuRWZmZWN0cyc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKiBJbnRlcmZhY2UgdG8gZGlzcGF0Y2ggYW4gYWN0aW9uIGFmdGVyIGVmZmVjdCByZWdpc3RyYXRpb24uXG4gKlxuICogSW1wbGVtZW50IHRoaXMgaW50ZXJmYWNlIHRvIGRpc3BhdGNoIGEgY3VzdG9tIGFjdGlvbiBhZnRlclxuICogdGhlIGVmZmVjdCBoYXMgYmVlbiBhZGRlZC4gWW91IGNhbiBsaXN0ZW4gdG8gdGhpcyBhY3Rpb25cbiAqIGluIHRoZSByZXN0IG9mIHRoZSBhcHBsaWNhdGlvbiB0byBleGVjdXRlIHNvbWV0aGluZyBhZnRlclxuICogdGhlIGVmZmVjdCBpcyByZWdpc3RlcmVkLlxuICpcbiAqIEB1c2FnZU5vdGVzXG4gKlxuICogIyMjIFNldCBhbiBpZGVudGlmaWVyIGZvciBhbiBFZmZlY3RzIGNsYXNzXG4gKlxuICogYGBgdHNcbiAqIGNsYXNzIEVmZmVjdFdpdGhJbml0QWN0aW9uIGltcGxlbWVudHMgT25Jbml0RWZmZWN0cyB7XG4gKlxuICogbmdyeE9uSW5pdEVmZmVjdHMoKSB7XG4gKiAgIHJldHVybiB7IHR5cGU6ICdbRWZmZWN0V2l0aEluaXRBY3Rpb25dIEluaXQnIH07XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBPbkluaXRFZmZlY3RzIHtcbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBBY3Rpb24gdG8gYmUgZGlzcGF0Y2hlZCBhZnRlciB0aGUgZWZmZWN0IGlzIHJlZ2lzdGVyZWQuXG4gICAqL1xuICBuZ3J4T25Jbml0RWZmZWN0cygpOiBBY3Rpb247XG59XG5cbmV4cG9ydCBjb25zdCBvbkluaXRFZmZlY3RzOiBrZXlvZiBPbkluaXRFZmZlY3RzID0gJ25ncnhPbkluaXRFZmZlY3RzJztcbiJdfQ==