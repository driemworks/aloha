{"version":3,"file":"store-testing.umd.js","sources":["../../../../../../modules/store/testing/src/mock_state.ts","../../../../../../modules/store/testing/src/mock_store.ts","../../../../../../modules/store/testing/src/mock_reducer_manager.ts","../../../../../../modules/store/testing/src/testing.ts","../../../../../../modules/store/testing/testing.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class MockState<T extends {}> extends BehaviorSubject<T> {\n  constructor() {\n    super(<T>{});\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport {\n  Action,\n  ActionsSubject,\n  INITIAL_STATE,\n  ReducerManager,\n  Store,\n} from '@ngrx/store';\nimport { MockState } from './mock_state';\n\n@Injectable()\nexport class MockStore<T> extends Store<T> {\n  public scannedActions$: Observable<Action>;\n\n  constructor(\n    private state$: MockState<T>,\n    actionsObserver: ActionsSubject,\n    reducerManager: ReducerManager,\n    @Inject(INITIAL_STATE) private initialState: T\n  ) {\n    super(state$, actionsObserver, reducerManager);\n    this.state$.next(this.initialState);\n    this.scannedActions$ = actionsObserver.asObservable();\n  }\n\n  setState(nextState: T): void {\n    this.state$.next(nextState);\n  }\n\n  addReducer() {\n    /* noop */\n  }\n\n  removeReducer() {\n    /* noop */\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ActionReducer } from '@ngrx/store';\n\n@Injectable()\nexport class MockReducerManager extends BehaviorSubject<\n  ActionReducer<any, any>\n> {\n  constructor() {\n    super(() => undefined);\n  }\n}\n","import { Provider } from '@angular/core';\nimport { MockState } from './mock_state';\nimport {\n  ActionsSubject,\n  INITIAL_STATE,\n  ReducerManager,\n  StateObservable,\n  Store,\n} from '@ngrx/store';\nimport { MockStore } from './mock_store';\nimport { MockReducerManager } from './mock_reducer_manager';\n\nexport interface MockStoreConfig<T> {\n  initialState?: T;\n}\n\nexport function provideMockStore<T = any>(\n  config: MockStoreConfig<T> = {}\n): Provider[] {\n  return [\n    ActionsSubject,\n    MockState,\n    { provide: INITIAL_STATE, useValue: config.initialState },\n    { provide: StateObservable, useClass: MockState },\n    { provide: ReducerManager, useClass: MockReducerManager },\n    { provide: Store, useClass: MockStore },\n  ];\n}\n\nexport { MockReducerManager } from './mock_reducer_manager';\nexport { MockState } from './mock_state';\nexport { MockStore } from './mock_store';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Injectable","BehaviorSubject","__extends","Inject","INITIAL_STATE","ActionsSubject","ReducerManager","Store","StateObservable"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;QAI6C,6BAAkB;QAC7D;mBACE,kBAAS,EAAE,CAAC;SACb;QAHU,SAAS;YADrBA,eAAU,EAAE;;WACA,SAAS,CAIrB;QAAD,gBAAC;KAAA,CAJ4CC,oBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ5D;QAYkCC,+BAAQ;QAGxC,mBACU,MAAoB,EAC5B,eAA+B,EAC/B,cAA8B,EACC,YAAe;YAJhD,YAME,kBAAM,MAAM,EAAE,eAAe,EAAE,cAAc,CAAC,SAG/C;YARS,YAAM,GAAN,MAAM,CAAc;YAGG,kBAAY,GAAZ,YAAY,CAAG;YAG9C,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YACpC,KAAI,CAAC,eAAe,GAAG,eAAe,CAAC,YAAY,EAAE,CAAC;;SACvD;QAED,4BAAQ,GAAR,UAAS,SAAY;YACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC7B;QAED,8BAAU,GAAV;;SAEC;QAED,iCAAa,GAAb;;SAEC;QAxBU,SAAS;YADrBF,eAAU,EAAE;YAQR,WAAAG,WAAM,CAACC,mBAAa,CAAC,CAAA;+CAHN,SAAS;gBACRC,oBAAc;gBACfC,oBAAc;WANrB,SAAS,CAyBrB;QAAD,gBAAC;KAAA,CAzBiCC,WAAK;;;;;;;;;;;;;;;;;;;;;;;;ACZvC;QAKwCL,wCAEvC;QACC;mBACE,kBAAM,cAAM,OAAA,SAAS,GAAA,CAAC;SACvB;QALU,kBAAkB;YAD9BF,eAAU,EAAE;;WACA,kBAAkB,CAM9B;QAAD,yBAAC;KAAA,CANuCC,oBAAe;;aCWvC,gBAAgB,CAC9B,MAA+B;QAA/B,uBAAA,EAAA,WAA+B;QAE/B,OAAO;YACLI,oBAAc;YACd,SAAS;YACT,EAAE,OAAO,EAAED,mBAAa,EAAE,QAAQ,EAAE,MAAM,CAAC,YAAY,EAAE;YACzD,EAAE,OAAO,EAAEI,qBAAe,EAAE,QAAQ,EAAE,SAAS,EAAE;YACjD,EAAE,OAAO,EAAEF,oBAAc,EAAE,QAAQ,EAAE,kBAAkB,EAAE;YACzD,EAAE,OAAO,EAAEC,WAAK,EAAE,QAAQ,EAAE,SAAS,EAAE;SACxC,CAAC;IACJ,CAAC;;IC3BD;;OAEG;;;;;;;;;;;;;;;"}