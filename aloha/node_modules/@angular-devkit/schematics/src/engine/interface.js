"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"interface.js","sourceRoot":"./","sources":["packages/angular_devkit/schematics/src/engine/interface.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { logging } from '@angular-devkit/core';\nimport { Observable } from 'rxjs';\nimport { Url } from 'url';\nimport { FileEntry, MergeStrategy, Tree } from '../tree/interface';\nimport { Workflow } from '../workflow/interface';\n\n\nexport interface TaskConfiguration<T = {}> {\n  name: string;\n  dependencies?: Array<TaskId>;\n  options?: T;\n}\n\nexport interface TaskConfigurationGenerator<T = {}> {\n  toConfiguration(): TaskConfiguration<T>;\n}\n\nexport type TaskExecutor<T = {}>\n  = (options: T | undefined, context: SchematicContext) => Promise<void> | Observable<void>;\n\nexport interface TaskExecutorFactory<T> {\n  readonly name: string;\n  create(options?: T): Promise<TaskExecutor> | Observable<TaskExecutor>;\n}\n\nexport interface TaskId {\n  readonly id: number;\n}\n\nexport interface TaskInfo {\n  readonly id: number;\n  readonly priority:  number;\n  readonly configuration: TaskConfiguration;\n  readonly context: SchematicContext;\n}\n\nexport interface ExecutionOptions {\n  interactive: boolean;\n}\n\n/**\n * The description (metadata) of a collection. This type contains every information the engine\n * needs to run. The CollectionMetadataT type parameter contains additional metadata that you\n * want to store while remaining type-safe.\n */\nexport type CollectionDescription<CollectionMetadataT extends object> = CollectionMetadataT & {\n  readonly name: string;\n  readonly extends?: string[];\n};\n\n/**\n * The description (metadata) of a schematic. This type contains every information the engine\n * needs to run. The SchematicMetadataT and CollectionMetadataT type parameters contain additional\n * metadata that you want to store while remaining type-safe.\n */\nexport type SchematicDescription<CollectionMetadataT extends object,\n                                 SchematicMetadataT extends object> = SchematicMetadataT & {\n  readonly collection: CollectionDescription<CollectionMetadataT>;\n  readonly name: string;\n  readonly private?: boolean;\n  readonly hidden?: boolean;\n};\n\n\n/**\n * The Host for the Engine. Specifically, the piece of the tooling responsible for resolving\n * collections and schematics descriptions. The SchematicMetadataT and CollectionMetadataT type\n * parameters contain additional metadata that you want to store while remaining type-safe.\n */\nexport interface EngineHost<CollectionMetadataT extends object, SchematicMetadataT extends object> {\n  createCollectionDescription(name: string): CollectionDescription<CollectionMetadataT>;\n  /**\n   * @deprecated Use `listSchematicNames`.\n   */\n  listSchematics(collection: Collection<CollectionMetadataT, SchematicMetadataT>): string[];\n  listSchematicNames(collection: CollectionDescription<CollectionMetadataT>): string[];\n\n  createSchematicDescription(\n      name: string,\n      collection: CollectionDescription<CollectionMetadataT>):\n        SchematicDescription<CollectionMetadataT, SchematicMetadataT> | null;\n  getSchematicRuleFactory<OptionT extends object>(\n      schematic: SchematicDescription<CollectionMetadataT, SchematicMetadataT>,\n      collection: CollectionDescription<CollectionMetadataT>): RuleFactory<OptionT>;\n  createSourceFromUrl(\n    url: Url,\n    context: TypedSchematicContext<CollectionMetadataT, SchematicMetadataT>,\n  ): Source | null;\n  transformOptions<OptionT extends object, ResultT extends object>(\n    schematic: SchematicDescription<CollectionMetadataT, SchematicMetadataT>,\n    options: OptionT,\n    context?: TypedSchematicContext<CollectionMetadataT, SchematicMetadataT>,\n  ): Observable<ResultT>;\n  transformContext(\n    context: TypedSchematicContext<CollectionMetadataT, SchematicMetadataT>,\n  ): TypedSchematicContext<CollectionMetadataT, SchematicMetadataT> | void;\n  createTaskExecutor(name: string): Observable<TaskExecutor>;\n  hasTaskExecutor(name: string): boolean;\n\n  readonly defaultMergeStrategy?: MergeStrategy;\n}\n\n\n/**\n * The root Engine for creating and running schematics and collections. Everything related to\n * a schematic execution starts from this interface.\n *\n * CollectionMetadataT is, by default, a generic Collection metadata type. This is used throughout\n * the engine typings so that you can use a type that's merged into descriptions, while being\n * type-safe.\n *\n * SchematicMetadataT is a type that contains additional typing for the Schematic Description.\n */\nexport interface Engine<CollectionMetadataT extends object, SchematicMetadataT extends object> {\n  createCollection(name: string): Collection<CollectionMetadataT, SchematicMetadataT>;\n  createContext(\n    schematic: Schematic<CollectionMetadataT, SchematicMetadataT>,\n    parent?: Partial<TypedSchematicContext<CollectionMetadataT, SchematicMetadataT>>,\n    executionOptions?: Partial<ExecutionOptions>,\n  ): TypedSchematicContext<CollectionMetadataT, SchematicMetadataT>;\n  createSchematic(\n      name: string,\n      collection: Collection<CollectionMetadataT, SchematicMetadataT>,\n  ): Schematic<CollectionMetadataT, SchematicMetadataT>;\n  createSourceFromUrl(\n    url: Url,\n    context: TypedSchematicContext<CollectionMetadataT, SchematicMetadataT>,\n  ): Source;\n  transformOptions<OptionT extends object, ResultT extends object>(\n      schematic: Schematic<CollectionMetadataT, SchematicMetadataT>,\n      options: OptionT,\n      context?: TypedSchematicContext<CollectionMetadataT, SchematicMetadataT>,\n  ): Observable<ResultT>;\n  executePostTasks(): Observable<void>;\n\n  readonly defaultMergeStrategy: MergeStrategy;\n  readonly workflow: Workflow | null;\n}\n\n\n/**\n * A Collection as created by the Engine. This should be used by the tool to create schematics,\n * or by rules to create other schematics as well.\n */\nexport interface Collection<CollectionMetadataT extends object, SchematicMetadataT extends object> {\n  readonly description: CollectionDescription<CollectionMetadataT>;\n  readonly baseDescriptions?: Array<CollectionDescription<CollectionMetadataT>>;\n\n  createSchematic(\n    name: string,\n    allowPrivate?: boolean,\n  ): Schematic<CollectionMetadataT, SchematicMetadataT>;\n  listSchematicNames(): string[];\n}\n\n\n/**\n * A Schematic as created by the Engine. This should be used by the tool to execute the main\n * schematics, or by rules to execute other schematics as well.\n */\nexport interface Schematic<CollectionMetadataT extends object, SchematicMetadataT extends object> {\n  readonly description: SchematicDescription<CollectionMetadataT, SchematicMetadataT>;\n  readonly collection: Collection<CollectionMetadataT, SchematicMetadataT>;\n\n  call<OptionT extends object>(\n    options: OptionT,\n    host: Observable<Tree>,\n    parentContext?: Partial<TypedSchematicContext<CollectionMetadataT, SchematicMetadataT>>,\n    executionOptions?: Partial<ExecutionOptions>,\n  ): Observable<Tree>;\n}\n\n\n/**\n * A SchematicContext. Contains information necessary for Schematics to execute some rules, for\n * example when using another schematics, as we need the engine and collection.\n */\nexport interface TypedSchematicContext<CollectionMetadataT extends object,\n                                       SchematicMetadataT extends object> {\n  readonly debug: boolean;\n  readonly engine: Engine<CollectionMetadataT, SchematicMetadataT>;\n  readonly logger: logging.LoggerApi;\n  readonly schematic: Schematic<CollectionMetadataT, SchematicMetadataT>;\n  readonly strategy: MergeStrategy;\n  readonly interactive: boolean;\n  addTask<T>(task: TaskConfigurationGenerator<T>, dependencies?: Array<TaskId>): TaskId;\n}\n\n\n/**\n * This is used by the Schematics implementations in order to avoid needing to have typing from\n * the tooling. Schematics are not specific to a tool.\n */\nexport type SchematicContext = TypedSchematicContext<{}, {}>;\n\n\n/**\n * A rule factory, which is normally the way schematics are implemented. Returned by the tooling\n * after loading a schematic description.\n */\nexport type RuleFactory<T extends object> = (options: T) => Rule;\n\n\n/**\n * A FileOperator applies changes synchronously to a FileEntry. An async operator returns\n * asynchronously. We separate them so that the type system can catch early errors.\n */\nexport type FileOperator = (entry: FileEntry) => FileEntry | null;\nexport type AsyncFileOperator = (tree: FileEntry) => Observable<FileEntry | null>;\n\n\n/**\n * A source is a function that generates a Tree from a specific context. A rule transforms a tree\n * into another tree from a specific context. In both cases, an Observable can be returned if\n * the source or the rule are asynchronous. Only the last Tree generated in the observable will\n * be used though.\n *\n * We obfuscate the context of Source and Rule because the schematic implementation should not\n * know which types is the schematic or collection metadata, as they are both tooling specific.\n */\nexport type Source = (context: SchematicContext) => Tree | Observable<Tree>;\nexport type Rule = (tree: Tree, context: SchematicContext) => Tree | Observable<Tree> | Rule | void;\n"]}