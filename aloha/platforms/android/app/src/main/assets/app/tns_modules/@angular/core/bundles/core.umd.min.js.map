{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","MONKEY_PATCH_KEY_NAME","stringify$1","loadInternal","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","lViewData","readPatchedLViewData","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderer","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","currentQueries","viewData","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","getRenderer","getRendererFactory","getCurrentSanitizer","enableBindings","disableBindings","getCurrentView","_getViewData","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getTView","getCurrentQueries","setCurrentQueries","queries","getCreationMode","getViewData","getCleanup","getTViewCleanup","cleanup","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentData","footer","parent","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveViewData","previousTView","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","canAccessViewProviders","node","startInjectables","startDirectives","directiveCount","providerTokenOrDef","getNodeInjectable","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","NodeInjector","_tNode","_hostView","_injectorIndex","getFactoryOf","typeAny","getInheritedFactory","getContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","directiveEndIndex","slice","startIndex","count","noop","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","NgModuleRef","NgModuleFactory","throwMultipleComponentError","tagName","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","NO_CHANGE","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","componentRefresh","createLViewData","parentViewData","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","addNode","elementCreate","setUpAttributes","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","totalHostVars","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","setRendererFactory","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","classIndex","directiveIndex","hackImplementationOfElementClassProp","hostStylingHack","classDeclarations","classList","val","updateClassProp","addOrRemove","elementStyling","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","initialClasses","elementStylingApply","hackImplementationOfElementStyling","hackSquashDeclaration","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","hackImplementationOfElementStyleProp","valueToAdd","elementStylingMap","classes","hackImplementationOfElementStylingMap","classInputVal","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","elementIndex","directive","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","queueHostBindingForCheck","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","markDirty","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextViewData","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","msg","updateBinding","exp1","exp2","exp3","exp4","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","result","tNodeChild","enumerable","configurable","_lookUpContext","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","createViewRef","componentIndex","hostComponentView","getComponent","Node","loadContext","getComponentAtNodeIndex","getViewComponent","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","getHostElement","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","imported","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","WRAP_RENDERER_FACTORY2","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","hostRNode","rootFlags","rootViewInjector","createChainedInjector","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","activeCaseIndex","tagNameValue","removedPhTNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","attr","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","SecurityContext","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","Sanitizer","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","expandModuleWithProviders","emitInline","compileInjector","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","listeners","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","ɵangular_packages_core_core_p","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_g","ɵangular_packages_core_core_k","ɵangular_packages_core_core_l","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_r","ɵangular_packages_core_core_v","ɵangular_packages_core_core_t","ɵangular_packages_core_core_u","ɵangular_packages_core_core_z","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_y","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","getModuleFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵWRAP_RENDERER_FACTORY2","ɵsetClassMetadata","setClassMetadata","clazz","ɵRender3DebugRendererFactory2","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","meta_1","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.4\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LViewData` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LViewData`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LViewData` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function setRendererFactory(factory) {\n        rendererFactory = factory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    function _getViewData() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    var tView;\n    function getTView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return tView;\n    }\n    var currentQueries;\n    function getCurrentQueries() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries;\n    }\n    function setCurrentQueries(queries) {\n        currentQueries = queries;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getContextViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextViewData;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lViewData, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lViewData);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                    throw new Error(\"No provider for \" + stringify$1(token));\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lViewData);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, or if there is no injector on this node, start by searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lViewData) :\n                    lViewData[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lViewData[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lViewData[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lViewData[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lViewData, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lViewData)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lViewData[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = currentTView.data;\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return getNodeInjectable(tInjectables, injectorView, i, tNode);\n            }\n        }\n        return NOT_FOUND;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & exports.InjectFlags.Self ||\n            (flags & exports.InjectFlags.Host &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getViewData());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setTNodeAndViewData(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element && (element.nodeType == Node.ELEMENT_NODE || element.nodeType == Node.TEXT_NODE), true, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lViewData) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        return tNode.flags & 4096 /* isComponent */ ? lViewData[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        if (tNode.parent == null) {\n            return getHostNative(currentView);\n        }\n        else {\n            var parentTNode = getFirstParentNative(tNode);\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Get the first parent of a node that isn't an IcuContainer TNode\n     */\n    function getFirstParentNative(tNode) {\n        var parent = tNode.parent;\n        while (parent && parent.type === 5 /* IcuContainer */) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent) {\n            if (tNode.parent.type === 4 /* ElementContainer */) {\n                currentNode = getHighestElementContainer(tNode);\n                parent = currentNode.parent;\n            }\n            else if (tNode.parent.type === 5 /* IcuContainer */) {\n                currentNode = getFirstParentNative(currentNode);\n                parent = currentNode.parent;\n            }\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else if (parentTNode.type === 5 /* IcuContainer */) {\n                var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n                nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(viewData, rf) {\n        var tView = getTView();\n        var parentFirstTemplatePass = getFirstTemplatePass();\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            if (!checkNoChangesMode) {\n                executeInitHooks(viewData, tView, creationMode);\n            }\n            refreshDynamicEmbeddedViews(viewData);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n            setHostBindings(tView, viewData);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    // <HACK(misko)>: set the `previousOrParentTNode` so that hostBindings functions can\n                    // correctly retrieve it. This should be removed once we call the hostBindings function\n                    // inline as part of the `RenderFlags.Create` because in that case the value will already be\n                    // correctly set.\n                    setPreviousOrParentTNode(getTView().data[currentElementIndex + HEADER_OFFSET]);\n                    // </HACK>\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass, rf);\n            }\n        }\n    }\n    function createLViewData(parentViewData, renderer, tView, context, flags, sanitizer, injector) {\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = parentViewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR] =\n            injector === undefined ? (parentViewData ? parentViewData[INJECTOR] : null) : injector;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] =\n                createTNode(viewData, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLViewData(declarationView, renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = getRendererFactory();\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var renderer = getRenderer();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, viewData);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getRenderer();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getRenderer();\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        setRendererFactory(factory);\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var viewData = getViewData();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = getRenderer();\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(viewData, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(viewData, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = getViewData();\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getTView());\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var viewData = getViewData();\n            var renderer = getRenderer();\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var viewData = getViewData();\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(viewData, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(viewData, index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = getRenderer();\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(viewData, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getTView();\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param classIndex Index of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     * @param directiveIndex the index for the directive that is attempting to change styling.\n     */\n    function elementClassProp(index, classIndex, value, directiveIndex) {\n        if (directiveIndex != undefined) {\n            return hackImplementationOfElementClassProp(index, classIndex, value, directiveIndex); // proper supported in next PR\n        }\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getViewData()), classIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     * @param directiveIndex the index for the directive that is attempting to change styling.\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer, directiveIndex) {\n        if (directiveIndex !== undefined) {\n            getCreationMode() &&\n                hackImplementationOfElementStyling(classDeclarations || null, styleDeclarations || null, styleSanitizer || null, directiveIndex); // supported in next PR\n            return;\n        }\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var stylingContext = getStylingContext(index, getViewData());\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(getViewData(), tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param directiveIndex the index for the directive that is attempting to change styling.\n     */\n    function elementStylingApply(index, directiveIndex) {\n        if (directiveIndex != undefined) {\n            return hackImplementationOfElementStylingApply(index, directiveIndex); // supported in next PR\n        }\n        var viewData = getViewData();\n        var isFirstRender = (viewData[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, viewData), getRenderer(), viewData, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(viewData);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directiveIndex the index for the directive that is attempting to change styling.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directiveIndex) {\n        if (directiveIndex != undefined)\n            return hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directiveIndex); // supported in next PR\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getViewData()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directiveIndex the index for the directive that is attempting to change styling.\n     */\n    function elementStylingMap(index, classes, styles, directiveIndex) {\n        if (directiveIndex != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directiveIndex); // supported in next PR\n        var viewData = getViewData();\n        var tNode = getTNode(index, viewData);\n        var stylingContext = getStylingContext(index, viewData);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(getViewData(), tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    function hackImplementationOfElementStyling(classDeclarations, styleDeclarations, styleSanitizer, directiveIndex) {\n        var node = getNativeByTNode(getPreviousOrParentTNode(), getViewData());\n        ngDevMode && assertDefined(node, 'expecting parent DOM node');\n        var hostStylingHackMap = (node.hostStylingHack || (node.hostStylingHack = {}));\n        hostStylingHackMap[directiveIndex] = {\n            classDeclarations: hackSquashDeclaration(classDeclarations),\n            styleDeclarations: hackSquashDeclaration(styleDeclarations), styleSanitizer: styleSanitizer\n        };\n    }\n    function hackSquashDeclaration(declarations) {\n        // assume the array is correct. This should be fine for View Engine compatibility.\n        return declarations || [];\n    }\n    function hackImplementationOfElementClassProp(index, classIndex, value, directiveIndex) {\n        var node = getNativeByIndex(index, getViewData());\n        ngDevMode && assertDefined(node, 'could not locate node');\n        var hostStylingHack = node.hostStylingHack[directiveIndex];\n        var className = hostStylingHack.classDeclarations[classIndex];\n        var renderer = getRenderer();\n        if (isProceduralRenderer(renderer)) {\n            value ? renderer.addClass(node, className) : renderer.removeClass(node, className);\n        }\n        else {\n            var classList = node.classList;\n            value ? classList.add(className) : classList.remove(className);\n        }\n    }\n    function hackImplementationOfElementStylingApply(index, directiveIndex) {\n        // Do nothing because the hack implementation is eager.\n    }\n    function hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directiveIndex) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    function hackImplementationOfElementStylingMap(index, classes, styles, directiveIndex) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, getRenderer());\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, getViewData());\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = getRenderer();\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var totalHostVars = 0;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(tView, viewData, totalHostVars);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, viewData, totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(viewData, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getTView();\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n    */\n    function queueHostBindingForCheck(tView, def) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings || noop);\n        if (def.hostVars)\n            tView.expandoInstructions.push(def.hostVars);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n        queueHostBindingForCheck(tView, def);\n    }\n    function addComponentLogic(viewData, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(getViewData(), getRendererFactory().createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var viewData = getViewData();\n        var tView = getTView();\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor);\n        var currentQueries = getCurrentQueries();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = getRenderer().createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var previousOrParentTNode = loadInternal(index, tView.data);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getViewData()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var viewData = getViewData();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(getViewData(), getRenderer(), getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, viewData, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getTView();\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewData = getViewData();\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews(viewData, null);\n        leaveView(viewData[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass, rf) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, getViewData());\n        ngDevMode && assertNodeType(getTView().data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getViewData())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var viewData = getViewData();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        var tView = getTView();\n        var firstTemplatePass = getFirstTemplatePass();\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewData, viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(getViewData()[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(getViewData()[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var tView = getTView();\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        getViewData()[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextViewData = getContextViewData();\n        return loadInternal(index, contextViewData);\n    }\n    function loadQueryList(queryListIdx) {\n        var viewData = getViewData();\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, getViewData());\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        var viewData = getViewData();\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        var viewData = getViewData();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(getCreationMode(), checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return getViewData()[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getViewData(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._view[HOST] == null) {\n                    var tView = this._view[HOST_NODE];\n                    return collectNativeNodes(this._view, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getViewData());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, exports.InjectFlags.Default, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getViewData());\n    }\n\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved for.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadContext(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lViewData);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadContext(element);\n        var lView = context.lViewData;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 64 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadContext(target).lViewData;\n        var rootLViewData = getRootView$1(lViewData);\n        return rootLViewData[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lViewData);\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lViewData, false);\n        }\n        return context.directives || [];\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     *\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lViewData;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lViewData');\n            lViewData = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lViewData = readPatchedLViewData(componentOrView);\n        }\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getContext(directive).native;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lViewData = context.lViewData;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lViewData);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(null, renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(rootView, renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass)\n            prefillHostVars(tView, rootView, componentDef.hostVars);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                        definition.hostVars += superDef.hostVars;\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            if (dedupStack.indexOf(defType) !== -1) {\n                return;\n            }\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var viewData = getViewData();\n        var tView = viewData[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var viewData = getViewData();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    viewData[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.4');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ? ngModule.injector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(null, renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, undefined, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootView), rootView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootView = _rootView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        var viewData = _getViewData();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = _getViewData();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass) {\n            i18nEndFirstPass(tView);\n        }\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = _getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getRenderer();\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var tView = getTView();\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var viewData = _getViewData();\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = viewData[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lViewData = _getViewData();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lViewData);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return currentView[matchingIdx];\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, type);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: new Map(), pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta_1 = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1) ||\n                        isUseValueProvider(meta_1) || isUseExistingProvider(meta_1);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        providedIn: meta_1.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1)) && meta_1.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta_1.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta_1)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta_1.useClass;\n                    }\n                    else if (isUseValueProvider(meta_1)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta_1.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta_1)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta_1.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta_1)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta_1.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @publicApi\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (ivyEnabled ? this.createDebugContext(el) : null);\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_p = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_m = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_n = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_o = _localeFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_k = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_l = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_c = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_q = wtfEnabled;\n    exports.ɵangular_packages_core_core_s = createScope;\n    exports.ɵangular_packages_core_core_r = detectWTF;\n    exports.ɵangular_packages_core_core_v = endTimeRange;\n    exports.ɵangular_packages_core_core_t = leave;\n    exports.ɵangular_packages_core_core_u = startTimeRange;\n    exports.ɵangular_packages_core_core_z = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bh = NG_INJECTABLE_DEF;\n    exports.ɵangular_packages_core_core_ba = bindingUpdated;\n    exports.ɵangular_packages_core_core_bb = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bc = getViewData;\n    exports.ɵangular_packages_core_core_bd = nextContextImpl;\n    exports.ɵangular_packages_core_core_bg = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bk = loadInternal;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = createViewRef;\n    exports.ɵangular_packages_core_core_a = makeParamDecorator;\n    exports.ɵangular_packages_core_core_b = makePropDecorator;\n    exports.ɵangular_packages_core_core_bi = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_w = _def;\n    exports.ɵangular_packages_core_core_x = DebugRendererFactory2;\n    exports.ɵangular_packages_core_core_y = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetContext = getContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}