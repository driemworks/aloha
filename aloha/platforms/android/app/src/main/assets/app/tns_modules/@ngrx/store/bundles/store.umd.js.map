{"version":3,"file":"store.umd.js","sources":["../../../../../modules/store/src/actions_subject.ts","../../../../../modules/store/src/tokens.ts","../../../../../modules/store/src/utils.ts","../../../../../modules/store/src/reducer_manager.ts","../../../../../modules/store/src/scanned_actions_subject.ts","../../../../../modules/store/src/state.ts","../../../../../modules/store/src/store.ts","../../../../../modules/store/src/selector.ts","../../../../../modules/store/src/store_module.ts","../../../../../modules/store/index.ts","../../../../../modules/store/store.ts"],"sourcesContent":["import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Action } from './models';\n\nexport const INIT = '@ngrx/store/init' as '@ngrx/store/init';\n\n@Injectable()\nexport class ActionsSubject extends BehaviorSubject<Action>\n  implements OnDestroy {\n  constructor() {\n    super({ type: INIT });\n  }\n\n  next(action: Action): void {\n    if (typeof action === 'undefined') {\n      throw new TypeError(`Actions must be objects`);\n    } else if (typeof action.type === 'undefined') {\n      throw new TypeError(`Actions must have a type property`);\n    }\n\n    super.next(action);\n  }\n\n  complete() {\n    /* noop */\n  }\n\n  ngOnDestroy() {\n    super.complete();\n  }\n}\n\nexport const ACTIONS_SUBJECT_PROVIDERS: Provider[] = [ActionsSubject];\n","import { InjectionToken } from '@angular/core';\n\nexport const _INITIAL_STATE = new InjectionToken(\n  '@ngrx/store Internal Initial State'\n);\nexport const INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nexport const REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Reducer Factory'\n);\nexport const _REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Reducer Factory Provider'\n);\nexport const INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Initial Reducers'\n);\nexport const _INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Initial Reducers'\n);\nexport const META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\nexport const STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nexport const _STORE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Store Reducers'\n);\nexport const _FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers'\n);\nexport const _FEATURE_REDUCERS_TOKEN = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers Token'\n);\nexport const FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Feature Reducers'\n);\n","import {\n  Action,\n  ActionReducer,\n  ActionReducerFactory,\n  ActionReducerMap,\n  MetaReducer,\n} from './models';\n\nexport function combineReducers<T, V extends Action = Action>(\n  reducers: ActionReducerMap<T, V>,\n  initialState?: Partial<T>\n): ActionReducer<T, V>;\nexport function combineReducers(\n  reducers: any,\n  initialState: any = {}\n): ActionReducer<any, Action> {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers: any = {};\n\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  const finalReducerKeys = Object.keys(finalReducers);\n\n  return function combination(state, action) {\n    state = state === undefined ? initialState : state;\n    let hasChanged = false;\n    const nextState: any = {};\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer: any = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\nexport function omit<T extends { [key: string]: any }>(\n  object: T,\n  keyToRemove: keyof T\n): Partial<T> {\n  return Object.keys(object)\n    .filter(key => key !== keyToRemove)\n    .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\n\nexport function compose<A>(): (i: A) => A;\nexport function compose<A, B>(b: (i: A) => B): (i: A) => B;\nexport function compose<A, B, C>(c: (i: B) => C, b: (i: A) => B): (i: A) => C;\nexport function compose<A, B, C, D>(\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => D;\nexport function compose<A, B, C, D, E>(\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => E;\nexport function compose<A, B, C, D, E, F>(\n  f: (i: E) => F,\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => F;\nexport function compose<A = any, F = any>(...functions: any[]): (i: A) => F;\nexport function compose(...functions: any[]) {\n  return function(arg: any) {\n    if (functions.length === 0) {\n      return arg;\n    }\n\n    const last = functions[functions.length - 1];\n    const rest = functions.slice(0, -1);\n\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  };\n}\n\nexport function createReducerFactory<T, V extends Action = Action>(\n  reducerFactory: ActionReducerFactory<T, V>,\n  metaReducers?: MetaReducer<T, V>[]\n): ActionReducerFactory<T, V> {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    return compose.apply(null, [...metaReducers, reducerFactory]);\n  }\n\n  return reducerFactory;\n}\n\nexport function createFeatureReducerFactory<T, V extends Action = Action>(\n  metaReducers?: MetaReducer<T, V>[]\n): (reducer: ActionReducer<T, V>, initialState?: T) => ActionReducer<T, V> {\n  const reducerFactory =\n    Array.isArray(metaReducers) && metaReducers.length > 0\n      ? compose<ActionReducer<T, V>>(...metaReducers)\n      : (r: ActionReducer<T, V>) => r;\n\n  return (reducer: ActionReducer<T, V>, initialState?: T) => {\n    reducer = reducerFactory(reducer);\n\n    return (state: T | undefined, action: V) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\n","import { Inject, Injectable, OnDestroy, Provider } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { ActionsSubject } from './actions_subject';\r\nimport {\r\n  Action,\r\n  ActionReducer,\r\n  ActionReducerFactory,\r\n  ActionReducerMap,\r\n  StoreFeature,\r\n} from './models';\r\nimport { INITIAL_REDUCERS, INITIAL_STATE, REDUCER_FACTORY } from './tokens';\r\nimport {\r\n  createFeatureReducerFactory,\r\n  createReducerFactory,\r\n  omit,\r\n} from './utils';\r\n\r\nexport abstract class ReducerObservable extends Observable<\r\n  ActionReducer<any, any>\r\n> {}\r\nexport abstract class ReducerManagerDispatcher extends ActionsSubject {}\r\nexport const UPDATE = '@ngrx/store/update-reducers' as '@ngrx/store/update-reducers';\r\n\r\n@Injectable()\r\nexport class ReducerManager extends BehaviorSubject<ActionReducer<any, any>>\r\n  implements OnDestroy {\r\n  constructor(\r\n    private dispatcher: ReducerManagerDispatcher,\r\n    @Inject(INITIAL_STATE) private initialState: any,\r\n    @Inject(INITIAL_REDUCERS) private reducers: ActionReducerMap<any, any>,\r\n    @Inject(REDUCER_FACTORY)\r\n    private reducerFactory: ActionReducerFactory<any, any>\r\n  ) {\r\n    super(reducerFactory(reducers, initialState));\r\n  }\r\n\r\n  addFeature(feature: StoreFeature<any, any>) {\r\n    this.addFeatures([feature]);\r\n  }\r\n\r\n  addFeatures(features: StoreFeature<any, any>[]) {\r\n    const reducers = features.reduce(\r\n      (\r\n        reducerDict,\r\n        { reducers, reducerFactory, metaReducers, initialState, key }\r\n      ) => {\r\n        const reducer =\r\n          typeof reducers === 'function'\r\n            ? createFeatureReducerFactory(metaReducers)(reducers, initialState)\r\n            : createReducerFactory(reducerFactory, metaReducers)(\r\n                reducers,\r\n                initialState\r\n              );\r\n\r\n        reducerDict[key] = reducer;\r\n        return reducerDict;\r\n      },\r\n      {} as { [key: string]: ActionReducer<any, any> }\r\n    );\r\n\r\n    this.addReducers(reducers);\r\n  }\r\n\r\n  removeFeature(feature: StoreFeature<any, any>) {\r\n    this.removeFeatures([feature]);\r\n  }\r\n\r\n  removeFeatures(features: StoreFeature<any, any>[]) {\r\n    this.removeReducers(features.map(p => p.key));\r\n  }\r\n\r\n  addReducer(key: string, reducer: ActionReducer<any, any>) {\r\n    this.addReducers({ [key]: reducer });\r\n  }\r\n\r\n  addReducers(reducers: { [key: string]: ActionReducer<any, any> }) {\r\n    this.reducers = { ...this.reducers, ...reducers };\r\n    this.updateReducers(Object.keys(reducers));\r\n  }\r\n\r\n  removeReducer(featureKey: string) {\r\n    this.removeReducers([featureKey]);\r\n  }\r\n\r\n  removeReducers(featureKeys: string[]) {\r\n    featureKeys.forEach(key => {\r\n      this.reducers = omit(this.reducers, key) /*TODO(#823)*/ as any;\r\n    });\r\n    this.updateReducers(featureKeys);\r\n  }\r\n\r\n  private updateReducers(featureKeys: string[]) {\r\n    this.next(this.reducerFactory(this.reducers, this.initialState));\r\n    this.dispatcher.next(<Action>{\r\n      type: UPDATE,\r\n      features: featureKeys,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.complete();\r\n  }\r\n}\r\n\r\nexport const REDUCER_MANAGER_PROVIDERS: Provider[] = [\r\n  ReducerManager,\r\n  { provide: ReducerObservable, useExisting: ReducerManager },\r\n  { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\r\n];\r\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Action } from './models';\n\n@Injectable()\nexport class ScannedActionsSubject extends Subject<Action>\n  implements OnDestroy {\n  ngOnDestroy() {\n    this.complete();\n  }\n}\n\nexport const SCANNED_ACTIONS_SUBJECT_PROVIDERS: Provider[] = [\n  ScannedActionsSubject,\n];\n","import { Inject, Injectable, OnDestroy, Provider } from '@angular/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  queueScheduler,\n  Subscription,\n} from 'rxjs';\nimport { observeOn, scan, withLatestFrom } from 'rxjs/operators';\n\nimport { ActionsSubject, INIT } from './actions_subject';\nimport { Action, ActionReducer } from './models';\nimport { ReducerObservable } from './reducer_manager';\nimport { ScannedActionsSubject } from './scanned_actions_subject';\nimport { INITIAL_STATE } from './tokens';\n\nexport abstract class StateObservable extends Observable<any> {}\n\n@Injectable()\nexport class State<T> extends BehaviorSubject<any> implements OnDestroy {\n  static readonly INIT = INIT;\n\n  private stateSubscription: Subscription;\n\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions: ScannedActionsSubject,\n    @Inject(INITIAL_STATE) initialState: any\n  ) {\n    super(initialState);\n\n    const actionsOnQueue$: Observable<Action> = actions$.pipe(\n      observeOn(queueScheduler)\n    );\n    const withLatestReducer$: Observable<\n      [Action, ActionReducer<any, Action>]\n    > = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n\n    const seed: StateActionPair<T> = { state: initialState };\n    const stateAndAction$: Observable<{\n      state: any;\n      action?: Action;\n    }> = withLatestReducer$.pipe(\n      scan<[Action, ActionReducer<T, Action>], StateActionPair<T>>(\n        reduceState,\n        seed\n      )\n    );\n\n    this.stateSubscription = stateAndAction$.subscribe(({ state, action }) => {\n      this.next(state);\n      scannedActions.next(action);\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\n}\n\nexport type StateActionPair<T, V extends Action = Action> = {\n  state: T | undefined;\n  action?: V;\n};\nexport function reduceState<T, V extends Action = Action>(\n  stateActionPair: StateActionPair<T, V> = { state: undefined },\n  [action, reducer]: [V, ActionReducer<T, V>]\n): StateActionPair<T, V> {\n  const { state } = stateActionPair;\n  return { state: reducer(state, action), action };\n}\n\nexport const STATE_PROVIDERS: Provider[] = [\n  State,\n  { provide: StateObservable, useExisting: State },\n];\n","import { Injectable, Provider } from '@angular/core';\nimport { Observable, Observer, Operator } from 'rxjs';\nimport { distinctUntilChanged, map, pluck } from 'rxjs/operators';\n\nimport { ActionsSubject } from './actions_subject';\nimport { Action, ActionReducer } from './models';\nimport { ReducerManager } from './reducer_manager';\nimport { StateObservable } from './state';\n\n@Injectable()\nexport class Store<T> extends Observable<T> implements Observer<Action> {\n  constructor(\n    state$: StateObservable,\n    private actionsObserver: ActionsSubject,\n    private reducerManager: ReducerManager\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<K>(mapFn: (state: T) => K): Observable<K>;\n  select<K, Props = any>(\n    mapFn: (state: T, props: Props) => K,\n    props: Props\n  ): Observable<K>;\n  select<a extends keyof T>(key: a): Observable<T[a]>;\n  select<a extends keyof T, b extends keyof T[a]>(\n    key1: a,\n    key2: b\n  ): Observable<T[a][b]>;\n  select<a extends keyof T, b extends keyof T[a], c extends keyof T[a][b]>(\n    key1: a,\n    key2: b,\n    key3: c\n  ): Observable<T[a][b][c]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c]\n  >(key1: a, key2: b, key3: c, key4: d): Observable<T[a][b][c][d]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d]\n  >(key1: a, key2: b, key3: c, key4: d, key5: e): Observable<T[a][b][c][d][e]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d],\n    f extends keyof T[a][b][c][d][e]\n  >(\n    key1: a,\n    key2: b,\n    key3: c,\n    key4: d,\n    key5: e,\n    key6: f\n  ): Observable<T[a][b][c][d][e][f]>;\n  /**\n   * This overload is used to support spread operator with\n   * fixed length tuples type in typescript 2.7\n   */\n  select<K = any>(...paths: string[]): Observable<K>;\n  select<Props = any>(\n    pathOrMapFn: ((state: T, props?: Props) => any) | string,\n    ...paths: string[]\n  ): Observable<any> {\n    return select.call(null, pathOrMapFn, ...paths)(this);\n  }\n\n  lift<R>(operator: Operator<T, R>): Store<R> {\n    const store = new Store<R>(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch<V extends Action = Action>(action: V) {\n    this.actionsObserver.next(action);\n  }\n\n  next(action: Action) {\n    this.actionsObserver.next(action);\n  }\n\n  error(err: any) {\n    this.actionsObserver.error(err);\n  }\n\n  complete() {\n    this.actionsObserver.complete();\n  }\n\n  addReducer<State, Actions extends Action = Action>(\n    key: string,\n    reducer: ActionReducer<State, Actions>\n  ) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n\n  removeReducer<Key extends Extract<keyof T, string>>(key: Key) {\n    this.reducerManager.removeReducer(key);\n  }\n}\n\nexport const STORE_PROVIDERS: Provider[] = [Store];\n\nexport function select<T, Props, K>(\n  mapFn: (state: T, props: Props) => K,\n  props?: Props\n): (source$: Observable<T>) => Observable<K>;\nexport function select<T, a extends keyof T>(\n  key: a,\n  props: null\n): (source$: Observable<T>) => Observable<T[a]>;\nexport function select<T, a extends keyof T, b extends keyof T[a]>(\n  key1: a,\n  key2: b\n): (source$: Observable<T>) => Observable<T[a][b]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b]\n>(\n  key1: a,\n  key2: b,\n  key3: c\n): (source$: Observable<T>) => Observable<T[a][b][c]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d\n): (source$: Observable<T>) => Observable<T[a][b][c][d]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e\n): (source$: Observable<T>) => Observable<T[a][b][c][d][e]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d],\n  f extends keyof T[a][b][c][d][e]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e,\n  key6: f\n): (source$: Observable<T>) => Observable<T[a][b][c][d][e][f]>;\n/**\n * This overload is used to support spread operator with\n * fixed length tuples type in typescript 2.7\n */\nexport function select<T, Props = any, K = any>(\n  propsOrPath: Props,\n  ...paths: string[]\n): (source$: Observable<T>) => Observable<K>;\nexport function select<T, Props, K>(\n  pathOrMapFn: ((state: T, props?: Props) => any) | string,\n  propsOrPath: Props | string,\n  ...paths: string[]\n) {\n  return function selectOperator(source$: Observable<T>): Observable<K> {\n    let mapped$: Observable<any>;\n\n    if (typeof pathOrMapFn === 'string') {\n      const pathSlices = [<string>propsOrPath, ...paths].filter(Boolean);\n      mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n    } else if (typeof pathOrMapFn === 'function') {\n      mapped$ = source$.pipe(\n        map(source => pathOrMapFn(source, <Props>propsOrPath))\n      );\n    } else {\n      throw new TypeError(\n        `Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n          ` expected 'string' or 'function'`\n      );\n    }\n\n    return mapped$.pipe(distinctUntilChanged());\n  };\n}\n","import { Selector, SelectorWithProps } from './models';\n\nexport type AnyFn = (...args: any[]) => any;\n\nexport type MemoizedProjection = { memoized: AnyFn; reset: () => void };\n\nexport type MemoizeFn = (t: AnyFn) => MemoizedProjection;\n\nexport type ComparatorFn = (a: any, b: any) => boolean;\n\nexport interface MemoizedSelector<State, Result>\n  extends Selector<State, Result> {\n  release(): void;\n  projector: AnyFn;\n}\n\nexport interface MemoizedSelectorWithProps<State, Props, Result>\n  extends SelectorWithProps<State, Props, Result> {\n  release(): void;\n  projector: AnyFn;\n}\n\nexport function isEqualCheck(a: any, b: any): boolean {\n  return a === b;\n}\n\nfunction isArgumentsChanged(\n  args: IArguments,\n  lastArguments: IArguments,\n  comparator: ComparatorFn\n) {\n  for (let i = 0; i < args.length; i++) {\n    if (!comparator(args[i], lastArguments[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function resultMemoize(\n  projectionFn: AnyFn,\n  isResultEqual: ComparatorFn\n) {\n  return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\n\nexport function defaultMemoize(\n  projectionFn: AnyFn,\n  isArgumentsEqual = isEqualCheck,\n  isResultEqual = isEqualCheck\n): MemoizedProjection {\n  let lastArguments: null | IArguments = null;\n  // tslint:disable-next-line:no-any anything could be the result.\n  let lastResult: any = null;\n\n  function reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n\n  // tslint:disable-next-line:no-any anything could be the result.\n  function memoized(): any {\n    if (!lastArguments) {\n      lastResult = projectionFn.apply(null, arguments);\n      lastArguments = arguments;\n      return lastResult;\n    }\n\n    if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n      return lastResult;\n    }\n\n    lastArguments = arguments;\n\n    const newResult = projectionFn.apply(null, arguments);\n    if (isResultEqual(lastResult, newResult)) {\n      return lastResult;\n    }\n\n    lastResult = newResult;\n\n    return newResult;\n  }\n\n  return { memoized, reset };\n}\n\nexport function createSelector<State, S1, Result>(\n  s1: Selector<State, S1>,\n  projector: (s1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  projector: (s1: S1, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, Result>(\n  selectors: [Selector<State, S1>],\n  projector: (s1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, Result>(\n  selectors: [SelectorWithProps<State, Props, S1>],\n  projector: (s1: S1, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  projector: (s1: S1, s2: S2, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>],\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>\n  ],\n  projector: (s1: S1, s2: S2, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  projector: (s1: S1, s2: S2, s3: S3, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>, Selector<State, S3>],\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, S6, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, S6, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  Result\n>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  s7: SelectorWithProps<State, Props, S7>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  Result\n>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>,\n    SelectorWithProps<State, Props, S7>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  s8: Selector<State, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  S8,\n  Result\n>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  s7: SelectorWithProps<State, Props, S7>,\n  s8: SelectorWithProps<State, Props, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>,\n    Selector<State, S8>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  S8,\n  Result\n>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>,\n    SelectorWithProps<State, Props, S7>,\n    SelectorWithProps<State, Props, S8>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, Props, Result>(\n  projector: SelectorWithProps<State, Props, Result>\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector(\n  ...input: any[]\n): Selector<any, any> | SelectorWithProps<any, any, any> {\n  return createSelectorFactory(defaultMemoize)(...input);\n}\n\nexport function defaultStateFn(\n  state: any,\n  selectors: Selector<any, any>[] | SelectorWithProps<any, any, any>[],\n  props: any,\n  memoizedProjector: MemoizedProjection\n): any {\n  if (props === undefined) {\n    const args = (<Selector<any, any>[]>selectors).map(fn => fn(state));\n    return memoizedProjector.memoized.apply(null, args);\n  }\n\n  const args = (<SelectorWithProps<any, any, any>[]>selectors).map(fn =>\n    fn(state, props)\n  );\n  return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n\nexport type SelectorFactoryConfig<T = any, V = any> = {\n  stateFn: (\n    state: T,\n    props: any,\n    selectors: Selector<any, any>[],\n    memoizedProjector: MemoizedProjection\n  ) => V;\n};\n\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn\n): (...input: any[]) => Selector<T, V>;\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<T, V>\n): (...input: any[]) => Selector<T, V>;\nexport function createSelectorFactory<T = any, Props = any, V = any>(\n  memoize: MemoizeFn\n): (...input: any[]) => SelectorWithProps<T, Props, V>;\nexport function createSelectorFactory<T = any, Props = any, V = any>(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<T, V>\n): (...input: any[]) => SelectorWithProps<T, Props, V>;\nexport function createSelectorFactory(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<any, any> = {\n    stateFn: defaultStateFn,\n  }\n) {\n  return function(\n    ...input: any[]\n  ): Selector<any, any> | SelectorWithProps<any, any, any> {\n    let args = input;\n    if (Array.isArray(args[0])) {\n      const [head, ...tail] = args;\n      args = [...head, ...tail];\n    }\n\n    const selectors = args.slice(0, args.length - 1);\n    const projector = args[args.length - 1];\n    const memoizedSelectors = selectors.filter(\n      (selector: any) =>\n        selector.release && typeof selector.release === 'function'\n    );\n\n    const memoizedProjector = memoize(function(...selectors: any[]) {\n      return projector.apply(null, selectors);\n    });\n\n    const memoizedState = defaultMemoize(function(state: any, props: any) {\n      // createSelector works directly on state\n      // e.g. createSelector((state, props) => ...)\n      if (selectors.length === 0) {\n        return projector.apply(null, [state, props]);\n      }\n\n      return options.stateFn.apply(null, [\n        state,\n        selectors,\n        props,\n        memoizedProjector,\n      ]);\n    });\n\n    function release() {\n      memoizedState.reset();\n      memoizedProjector.reset();\n\n      memoizedSelectors.forEach(selector => selector.release());\n    }\n\n    return Object.assign(memoizedState.memoized, {\n      release,\n      projector: memoizedProjector.memoized,\n    });\n  };\n}\n\nexport function createFeatureSelector<T>(\n  featureName: string\n): MemoizedSelector<object, T>;\nexport function createFeatureSelector<T, V>(\n  featureName: keyof T\n): MemoizedSelector<T, V>;\nexport function createFeatureSelector(\n  featureName: any\n): MemoizedSelector<any, any> {\n  return createSelector(\n    (state: any) => state[featureName],\n    (featureState: any) => featureState\n  );\n}\n","import {\n  NgModule,\n  Inject,\n  ModuleWithProviders,\n  OnDestroy,\n  InjectionToken,\n  Injector,\n} from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  StoreFeature,\n  InitialState,\n  MetaReducer,\n} from './models';\nimport { compose, combineReducers, createReducerFactory } from './utils';\nimport {\n  INITIAL_STATE,\n  INITIAL_REDUCERS,\n  _INITIAL_REDUCERS,\n  REDUCER_FACTORY,\n  _REDUCER_FACTORY,\n  STORE_FEATURES,\n  _INITIAL_STATE,\n  META_REDUCERS,\n  _STORE_REDUCERS,\n  FEATURE_REDUCERS,\n  _FEATURE_REDUCERS,\n  _FEATURE_REDUCERS_TOKEN,\n} from './tokens';\nimport { ACTIONS_SUBJECT_PROVIDERS, ActionsSubject } from './actions_subject';\nimport {\n  REDUCER_MANAGER_PROVIDERS,\n  ReducerManager,\n  ReducerObservable,\n} from './reducer_manager';\nimport {\n  SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n  ScannedActionsSubject,\n} from './scanned_actions_subject';\nimport { STATE_PROVIDERS } from './state';\nimport { STORE_PROVIDERS, Store } from './store';\n\n@NgModule({})\nexport class StoreRootModule {\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions$: ScannedActionsSubject,\n    store: Store<any>\n  ) {}\n}\n\n@NgModule({})\nexport class StoreFeatureModule implements OnDestroy {\n  constructor(\n    @Inject(STORE_FEATURES) private features: StoreFeature<any, any>[],\n    @Inject(FEATURE_REDUCERS) private featureReducers: ActionReducerMap<any>[],\n    private reducerManager: ReducerManager,\n    root: StoreRootModule\n  ) {\n    const feats = features.map((feature, index) => {\n      const featureReducerCollection = featureReducers.shift();\n      const reducers = featureReducerCollection /*TODO(#823)*/![index];\n\n      return {\n        ...feature,\n        reducers,\n        initialState: _initialStateFactory(feature.initialState),\n      };\n    });\n\n    reducerManager.addFeatures(feats);\n  }\n\n  ngOnDestroy() {\n    this.reducerManager.removeFeatures(this.features);\n  }\n}\n\nexport type StoreConfig<T, V extends Action = Action> = {\n  initialState?: InitialState<T>;\n  reducerFactory?: ActionReducerFactory<T, V>;\n  metaReducers?: MetaReducer<T, V>[];\n};\n\n@NgModule({})\nexport class StoreModule {\n  static forRoot<T, V extends Action = Action>(\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders<StoreRootModule>;\n  static forRoot(\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>,\n    config: StoreConfig<any, any> = {}\n  ): ModuleWithProviders<StoreRootModule> {\n    return {\n      ngModule: StoreRootModule,\n      providers: [\n        { provide: _INITIAL_STATE, useValue: config.initialState },\n        {\n          provide: INITIAL_STATE,\n          useFactory: _initialStateFactory,\n          deps: [_INITIAL_STATE],\n        },\n        { provide: _INITIAL_REDUCERS, useValue: reducers },\n        {\n          provide: _STORE_REDUCERS,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n        },\n        {\n          provide: INITIAL_REDUCERS,\n          deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n          useFactory: _createStoreReducers,\n        },\n        {\n          provide: META_REDUCERS,\n          useValue: config.metaReducers ? config.metaReducers : [],\n        },\n        {\n          provide: _REDUCER_FACTORY,\n          useValue: config.reducerFactory\n            ? config.reducerFactory\n            : combineReducers,\n        },\n        {\n          provide: REDUCER_FACTORY,\n          deps: [_REDUCER_FACTORY, META_REDUCERS],\n          useFactory: createReducerFactory,\n        },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n      ],\n    };\n  }\n\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders<StoreFeatureModule>;\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducer: ActionReducer<T, V> | InjectionToken<ActionReducer<T, V>>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders<StoreFeatureModule>;\n  static forFeature(\n    featureName: string,\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>\n      | ActionReducer<any, any>\n      | InjectionToken<ActionReducer<any, any>>,\n    config: StoreConfig<any, any> = {}\n  ): ModuleWithProviders<StoreFeatureModule> {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [\n        {\n          provide: STORE_FEATURES,\n          multi: true,\n          useValue: <StoreFeature<any, any>>{\n            key: featureName,\n            reducerFactory: config.reducerFactory\n              ? config.reducerFactory\n              : combineReducers,\n            metaReducers: config.metaReducers ? config.metaReducers : [],\n            initialState: config.initialState,\n          },\n        },\n        { provide: _FEATURE_REDUCERS, multi: true, useValue: reducers },\n        {\n          provide: _FEATURE_REDUCERS_TOKEN,\n          multi: true,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n        },\n        {\n          provide: FEATURE_REDUCERS,\n          multi: true,\n          deps: [\n            Injector,\n            _FEATURE_REDUCERS,\n            [new Inject(_FEATURE_REDUCERS_TOKEN)],\n          ],\n          useFactory: _createFeatureReducers,\n        },\n      ],\n    };\n  }\n}\n\nexport function _createStoreReducers(\n  injector: Injector,\n  reducers: ActionReducerMap<any, any>,\n  tokenReducers: ActionReducerMap<any, any>\n) {\n  return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\n\nexport function _createFeatureReducers(\n  injector: Injector,\n  reducerCollection: ActionReducerMap<any, any>[],\n  tokenReducerCollection: ActionReducerMap<any, any>[]\n) {\n  const reducers = reducerCollection.map((reducer, index) => {\n    return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n  });\n\n  return reducers;\n}\n\nexport function _initialStateFactory(initialState: any): any {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n\n  return initialState;\n}\n","/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ACTIONS_SUBJECT_PROVIDERS as Éµngrx_modules_store_store_c} from './src/actions_subject';\nexport {StoreFeature as Éµngrx_modules_store_store_a} from './src/models';\nexport {REDUCER_MANAGER_PROVIDERS as Éµngrx_modules_store_store_d} from './src/reducer_manager';\nexport {SCANNED_ACTIONS_SUBJECT_PROVIDERS as Éµngrx_modules_store_store_e} from './src/scanned_actions_subject';\nexport {isEqualCheck as Éµngrx_modules_store_store_f} from './src/selector';\nexport {STATE_PROVIDERS as Éµngrx_modules_store_store_g} from './src/state';\nexport {STORE_PROVIDERS as Éµngrx_modules_store_store_b} from './src/store';"],"names":["Injectable","BehaviorSubject","InjectionToken","__extends","Observable","Inject","Subject","observeOn","queueScheduler","withLatestFrom","scan","__param","__spread","pluck","map","distinctUntilChanged","NgModule","Injector"],"mappings":"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"}